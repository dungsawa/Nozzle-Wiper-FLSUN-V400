

[servo B_S]
pin: PD13
maximum_servo_angle: 180
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025
initial_angle: 180  








[gcode_macro _AFC_BRUSH_VARS]
description: Tham số cấu hình cho macro chải bàn chải
gcode: # Để trống

# Vị trí tâm của bàn chải (X, Y, Z).
# Nếu không muốn di chuyển trục Z khi vào bàn chải, đặt Z = -1
variable_brush_loc                : 0,130,10  

# Tốc độ quét khi chải (mm/s). Thực tế sẽ được nhân *60 để ra mm/min.
variable_brush_clean_speed        : 150       

# Gia tốc của chuyển động khi chải.
# =0 thì dùng gia tốc chung (global accel). >0 thì ghi đè.
variable_brush_clean_accel        : 0         

# Bề rộng bàn chải theo trục X (mm).
variable_brush_width              : 20       

# Độ sâu bàn chải theo trục Y (mm).
variable_brush_depth              : 5        

# True  = quét theo trục Y trước rồi X.
# False = chỉ quét theo trục X.
variable_y_brush                  : True      

# Số lần quét qua lại trên bàn chải.
variable_brush_count              : 5         

# Sau khi chải xong, di chuyển trục Z để tránh va vào bàn.
# Nếu = -1 thì không di chuyển Z.
variable_z_move                   : 10        





















#===============================================================
#  AFC_BRUSH (Delta-safe / CoreXY-safe)
#===============================================================

[gcode_macro AFC_BRUSH]
description: Wipe the nozzle on the brush (Delta-safe)
gcode:
    {% set gVars              = printer['gcode_macro _AFC_GLOBAL_VARS'] %}
    {% set accel              = gVars['accel']            | default(2000)   | float %}
    {% set travel_speed       = gVars['travel_speed']     | default(120)*60 | float %}
    {% set z_travel_speed     = gVars['z_travel_speed']   | default(30)*60  | float %}
    {% set verbose            = gVars['verbose']          | default(1)      | int %}

    {% set vars               = printer['gcode_macro _AFC_BRUSH_VARS'] %}
    {% set Bx, By, Bz         = vars.brush_loc            | default([0,130,10]) | map('float') %}
    {% set brush_clean_accel  = vars['brush_clean_accel'] | default(0)          | float %}
    {% set y_brush            = (vars['y_brush']          | default(True))      %}
    {% set brush_clean_speed  = vars['brush_clean_speed'] | default(150)*60     | float %}
    {% set brush_width        = vars['brush_width']       | default(20)         | float %}
    {% set brush_depth        = vars['brush_depth']       | default(5)          | float %}
    {% set brush_count        = vars['brush_count']       | default(5)          | int %}
    {% set z_move             = vars['z_move']            | default(-1)         | float %}
    {% set tool_servo_enable  = vars['tool_servo_enable'] | default(true)       %}
    {% set safe_brush_z       = vars['safe_brush_z']      | default(40)         | float %}
    {% set finish_z_abs       = vars['finish_z_abs']      | default(90)         | float %}   # << thêm

    # --- Normalize booleans ---
    {% if y_brush is string %}{% set y_brush = (y_brush | lower == 'true') %}{% endif %}
    {% if tool_servo_enable is string %}{% set tool_servo_enable = (tool_servo_enable | lower == 'true') %}{% endif %}

    # --- Gioi han truc ---
    {% if printer.dual_carriage is defined %}
      {% if printer.dual_carriage.carriage_0 == "INACTIVE" %}
        {% set x_max = printer.configfile.config.dual_carriage.position_max | float %}
        {% set x_min = printer.configfile.config.dual_carriage.position_min | float %}
      {% else %}
        {% set x_max = printer.toolhead.axis_maximum.x %}
        {% set x_min = printer.toolhead.axis_minimum.x %}
      {% endif %}
    {% else %}
      {% set x_max = printer.toolhead.axis_maximum.x %}
      {% set x_min = printer.toolhead.axis_minimum.x %}
    {% endif %}
    {% set y_max = printer.toolhead.axis_maximum.y %}
    {% set y_min = printer.toolhead.axis_minimum.y %}
    {% set z_max = printer.toolhead.axis_maximum.z | float %}
    {% set z_min = printer.toolhead.axis_minimum.z | float %}

    # --- Tinh vung quet ban chai ---
    {% set brush_x_max = Bx + brush_width / 2.0 %}
    {% set brush_x_min = Bx - brush_width / 2.0 %}
    {% set brush_y_max = By + brush_depth / 2.0 %}
    {% set brush_y_min = By - brush_depth / 2.0 %}

    # --- Luu accel / chon accel ---
    {% set saved_accel = printer.toolhead.max_accel %}
    {% set selected_accel = brush_clean_accel if brush_clean_accel > 0 else accel %}

    AFC_DISABLE_SKEW
    SET_VELOCITY_LIMIT ACCEL={selected_accel}

    # --- Servo OUT ---
    {% if tool_servo_enable %}
      {% if verbose > 1 %} RESPOND TYPE=command MSG='Brush Servo: OUT' {% endif %}
      _BRUSH_SERVO POS=out
    {% endif %}

    {% if verbose > 0 %}
      RESPOND TYPE=command MSG='AFC_Brush: Clean Nozzle (Delta-safe)'
    {% endif %}

    G90

    # --- Ha ve Z an toan truoc khi di XY ---
    {% set safe_z = safe_brush_z %}
    {% set safe_z = [safe_z, z_max - 0.5] | min %}
    {% set safe_z = [safe_z, z_min + 0.5] | max %}
    G1 Z{safe_z} F{z_travel_speed}

    # --- Di den XY tam ban chai (clamp) ---
    {% set Bx_c = [ [Bx, x_max - 0.5] | min , x_min + 0.5 ] | max %}
    {% set By_c = [ [By, y_max - 0.5] | min , y_min + 0.5 ] | max %}
    G1 X{Bx_c} Y{By_c} F{travel_speed}

    # --- Den Bz (neu >=0) (clamp) ---
    {% if Bz >= 0 %}
      {% set Bz_c = [ [Bz, z_max - 0.5] | min , z_min + 0.5 ] | max %}
      G1 Z{Bz_c} F{z_travel_speed}
    {% endif %}

    # --- Tinh lai mien quet sau clamp ---
    {% set brush_x_max_c = [ [brush_x_max, x_max - 0.5] | min , x_min + 0.5 ] | max %}
    {% set brush_x_min_c = [ [brush_x_min, x_max - 0.5] | min , x_min + 0.5 ] | max %}
    {% set brush_y_max_c = [ [brush_y_max, y_max - 0.5] | min , y_min + 0.5 ] | max %}
    {% set brush_y_min_c = [ [brush_y_min, y_max - 0.5] | min , y_min + 0.5 ] | max %}

    # --- Quet theo Y (tuy chon) ---
    {% if y_brush %}
      {% if verbose > 1 %} RESPOND TYPE=command MSG='AFC_Brush: Y passes' {% endif %}
      {% for i in range(brush_count) %}
        G1 Y{brush_y_min_c} F{brush_clean_speed}
        G1 Y{brush_y_max_c} F{brush_clean_speed}
        G1 Y{By_c}         F{brush_clean_speed}
      {% endfor %}
    {% endif %}

    # --- Quet theo X ---
    {% if verbose > 1 %} RESPOND TYPE=command MSG='AFC_Brush: X passes' {% endif %}
    {% for i in range(brush_count) %}
      G1 X{brush_x_min_c} F{brush_clean_speed}
      G1 X{brush_x_max_c} F{brush_clean_speed}
      G1 X{Bx_c}          F{brush_clean_speed}
    {% endfor %}

    # ---------------- KET THUC (đã sửa theo yêu cầu) ----------------
    # Nang Z tuyet doi len finish_z_abs (clamp), sau do thu servo ve 180
    {% set finish_z = [ [finish_z_abs, z_max - 0.5] | min , z_min + 0.5 ] | max %}
    G90
    G1 Z{finish_z} F{z_travel_speed}

    {% if tool_servo_enable %}
      {% if verbose > 1 %} RESPOND TYPE=command MSG='Brush Servo: IN (180)' {% endif %}
      _BRUSH_SERVO POS=in
      G4 P300
    {% endif %}
    # ---------------------------------------------------------------

    # Khoi phuc accel va enable skew
    SET_VELOCITY_LIMIT ACCEL={saved_accel}
    AFC_ENABLE_SKEW


#--=================================================================================-
#------- Helper macro for brush servo -----------------------------------------------
#--=================================================================================-
[gcode_macro _BRUSH_SERVO]
description: Dieu khien servo ban chai POS=in|out hoac goc tuy y (ANGLE=...)
variable_out_angle: 80     # = goc dua ban chai ra
variable_in_angle: 180     # = goc thu vao
gcode:
  {% set pos = params.POS|default("")|lower %}
  {% if 'angle' in params %}
    SET_SERVO SERVO=B_S ANGLE={params.ANGLE|float}
  {% elif pos == 'out' %}
    SET_SERVO SERVO=B_S ANGLE={printer["gcode_macro _BRUSH_SERVO"].out_angle}
    G4 P500
  {% elif pos == 'in' %}
    SET_SERVO SERVO=B_S ANGLE={printer["gcode_macro _BRUSH_SERVO"].in_angle}
    G4 P500
  {% else %}
    RESPOND TYPE=error MSG="BRUSH_SERVO: POS=in|out hoac ANGLE=<deg>"
  {% endif %}

[delayed_gcode BRUSH_SERVO_INIT]
initial_duration: 1.0
gcode:
  SET_SERVO SERVO=B_S ANGLE={printer["gcode_macro _BRUSH_SERVO"].in_angle}
